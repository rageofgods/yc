pipeline {
    agent any

    stages {
        stage('Terraform plan') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'yc_token', variable: 'yc_token'),
                        string(credentialsId: 'cloud_id', variable: 'cloud_id'),
                        string(credentialsId: 'folder_id', variable: 'folder_id'),
                        string(credentialsId: 'terraform_ssh_pub', variable: 'ssh_key_pub'),
                        string(credentialsId: 's3_access_key', variable: 's3_access_key'),
                        string(credentialsId: 's3_secret_key', variable: 's3_secret_key')
                        ]) {
                            def terraform_key_path = "${WORKSPACE}/terraform.key"
                            sh 'terraform init -no-color -input=false -backend-config "bucket=terraform-state-01" \
                                                                        -backend-config "key=terraform.tfstate" \
                                                                        -backend-config "endpoint=storage.yandexcloud.net" \
                                                                        -backend-config "access_key=${s3_access_key}" \
                                                                        -backend-config "secret_key=${s3_secret_key}" \
                                                                        -backend-config "region=region1" \
                                                                        -backend-config "skip_region_validation=true" \
                                                                        -backend-config "skip_metadata_api_check=true" \
                                                                        -backend-config "skip_credentials_validation=true"'
                            withCredentials([file(credentialsId: 'terraform_ssh_private', variable: 'private_key')]) {
                                writeFile file: "${terraform_key_path}", text: readFile(private_key)
                            }
                            sh "chmod 600 ${terraform_key_path}"
                            sh 'terraform plan -no-color -input=false -out=tfplan -var "yc_token=${yc_token}" \
                                                                        -var "yc_cloud_id=${cloud_id}" \
                                                                        -var "yc_folder_id=${folder_id}" \
                                                                        -var "ssh_key=${ssh_key_pub}"'
                        }
                }
            }
        }

        stage('Deploy yc infra') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'yc_token', variable: 'yc_token'),
                        string(credentialsId: 'cloud_id', variable: 'cloud_id'),
                        string(credentialsId: 'folder_id', variable: 'folder_id'),
                        string(credentialsId: 'terraform_ssh_pub', variable: 'ssh_key_pub')
                        ]) {
                            sh 'terraform apply -no-color -input=false tfplan'
                        }
                }
            }
        }
    }
}